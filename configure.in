dnl Process this file with autoconf to produce a configure script.
AC_INIT(rexxsaa.h)
AC_PREFIX_DEFAULT(/usr)

VERSION=3.0
VERSION_NODOT=30

dnl ---------------------- check for C compiler -----------------
dnl Checks for one of the C compilers below - change if yours not there.
CC_LIST="gcc cc c89 acc"
MH_PROG_CC

AC_CONFIG_HEADER(config.h)
AC_ISC_POSIX

dnl Checks for system first
AC_CANONICAL_SYSTEM

mymakefile="Makefile"
on_qnx=no
on_beos=no
case "$target" in
	*hp-hpux*)
		SYS_DEFS="-D_HPUX_SOURCE"
		;;
	*ibm-aix*)
		SYS_DEFS="-D_ALL_SOURCE"
		mymakefile="Makefile.aix"
		;;
	*dec-osf*)
		;;
	*sequent-dynix*)
		;;
	*solaris*)
		;;
	sparc*sunos*)
		;;
	*linux*)
		;;
	*nto-qnx*)
		;;
	*qnx*)
		on_qnx=yes
		SYS_DEFS="-Q"
		;;
	*beos*)
		on_beos=yes
		;;
esac
AC_SUBST(SYS_DEFS)

dnl Check for dynamic shared library support libraries
MH_EXTRA_LIBS=""
MH_CHECK_LIB(dld dl)
SHLIBS="${MH_EXTRA_LIBS}"

dnl Check for extra required libraries - don't include libfl or libl
MH_EXTRA_LIBS=""
MH_CHECK_LIB(m nsl nsl_s socket)
dnl -- check for crypt library and function
MH_CHECK_CRYPT
AC_PROG_LEX
BOTHLIBS="${LEXLIB} ${MH_EXTRA_LIBS}"

MH_HAVE_PROTO
if test "$mh_have_proto" = "no"; then
        AC_MSG_ERROR(Regina requires an ANSI compiler; cannot continue)
fi

AC_PROG_GCC_TRADITIONAL
AC_PROG_RANLIB

dnl --------------------- Check for other programs. ---------------
AC_PROG_LN_S
AC_PROG_MAKE_SET

dnl -------------------- Checks for header files. -----------------
AC_HEADER_STDC
AC_CHECK_HEADERS( \
        stdio.h \
        stdlib.h \
        setjmp.h \
        unistd.h \
        ctype.h \
        pwd.h \
        grp.h \
        math.h \
        poll.h \
        time.h \
        sys/time.h \
        sys/wait.h \
        sys/stat.h \
        assert.h \
        errno.h \
        stdarg.h \
        string.h \
        termios.h \
        signal.h \
        limits.h \
        fcntl.h \
        malloc.h \
        dl.h \
        sys/select.h \
        arpa/inet.h  \
        sys/socket.h \
        sys/resource.h \
        netinet/in.h \
        netdb.h
        )

AC_CHECK_FUNCS(sysconf putenv usleep random ftruncate memcpy memmove strerror strerror_r gettimeofday ftime _fullpath vsprintf _splitpath2 _splitpath sigaction mkstemp)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM
MH_CHECK_CC_O
MH_CHECK__SIGHANDLER_T
MH_STRUCT_RANDOM_DATA

dnl Checks for library functions.
AC_FUNC_MEMCMP
AC_FUNC_ALLOCA
if test $ac_cv_func_alloca_works = yes; then
        ALLOCA_SHO=""
else
        ALLOCA_SHO="alloca.sho"
fi
AC_SUBST(ALLOCA_SHO)

dnl --------------- allow --enable-debug to compile in debug mode --------
AC_ARG_ENABLE(debug,
        [  --enable-debug          turn on debugging],
        [with_debug=$enableval],
        [with_debug=no],
)
cflags_g="`echo $CFLAGS | grep -c '\-g'`"
cflags_O="`echo $CFLAGS | grep -c '\-O'`"

if test "$with_debug" = yes; then
        DEBUG="-DDEBUG"
        AC_SUBST(DEBUG)
        if test "$cflags_g" = "0"; then
                CFLAGS="${CFLAGS} -g"
        fi
        if test "$cflags_O" != "0"; then
                CFLAGS="`echo ${CFLAGS} | sed -e s/-O.//`"
        fi
else
        DEBUG="-DNDEBUG"
        AC_SUBST(DEBUG)
        if test "$cflags_O" = "0"; then
                CFLAGS="${CFLAGS} -O"
        fi
        if test "$cflags_g" != "0"; then
                CFLAGS="`echo ${CFLAGS} | sed -e s/-g//`"
        fi
fi
if test "$ac_cv_prog_CC" = "gcc"; then
        if test "$with_debug" = yes; then
                CFLAGS="${CFLAGS} -Wall"
        else
                CFLAGS="-O3 -Wall -fomit-frame-pointer"
        fi
fi
if test "$on_qnx" = yes; then
        if test "$with_debug" = yes; then
                CFLAGS="-g"
        else
                CFLAGS="-Otax"
        fi
fi
if test "$on_beos" = yes; then
        if test "$with_debug" = yes; then
                CFLAGS="${CFLAGS} -Wall"
        else
                CFLAGS="-O2 -Wall"
        fi
        sharedir="/boot/home/config/add-ons/rexx"
else
        if test "x$prefix" != xNONE; then
           sharedir="$prefix/share/regina"
        else
           sharedir="$ac_default_prefix/share/regina"
        fi
fi
AC_SUBST(sharedir)

dnl --------------- allow --enable-purify to enable linking with Purify
AC_ARG_ENABLE(purify,
        [  --enable-purify         link with Purify (TM)],
        [with_purify=$enableval],
        [with_purify=no],
)
if test "$with_purify" = yes; then
        PURIFY="purify"
else
        PURIFY=""
fi
AC_SUBST(PURIFY)

dnl --------------- allow --enable-posix-threads to enable multi-threading
AC_ARG_ENABLE(posix-threads,
        [  --enable-posix-threads  enable POSIX-style multi-threading],
        [enable_posix_threads=$enableval],
        [enable_posix_threads=no],
)
MH_CHECK_POSIX_THREADS
if test "$mh_has_pthreads" = yes; then
	save_cflags="$CFLAGS"
	CFLAGS="$CFLAGS $THREADING_COMPILE"
#
# Where we know the format of getgrgid_r() function
# only test for that case
#
	case "$target" in
		*solaris*)
			MH_GETGRGID_R_STRUCT_RETURN
			;;
		*linux*)
			MH_GETGRGID_R_INT_RETURN_5_PARMS
			;;
		*dec-osf*)
			MH_GETGRGID_R_INT_RETURN_5_PARMS
			;;
		*)
			MH_GETGRGID_R_INT_RETURN_5_PARMS
			if test "$mh_cv_getgrgid_r_int5" = "no"; then
				MH_GETGRGID_R_INT_RETURN_4_PARMS
				if test "$mh_cv_getgrgid_r_int4" = "no"; then
					MH_GETGRGID_R_STRUCT_RETURN
				fi
			fi
	esac
	MH_GETPWUID_R_INT_RETURN
	if test "$mh_cv_getpwuid_r_int" = "no"; then
		MH_GETPWUID_R_STRUCT_RETURN
	fi
	CFLAGS="$save_CFLAGS"
	REGINAMULTITHREAD="yes"
else
	REGINAMULTITHREAD="no"
fi
AC_SUBST(REGINAMULTITHREAD)

dnl --------------- allow --enable-tracemem to enable internal memory tracing
AC_ARG_ENABLE(tracemem,
        [  --enable-tracemem       enable memory tracing in debug mode],
        [with_tracemem=$enableval],
        [with_tracemem=no],
)
if test "$with_tracemem" = yes; then
        TRACEMEM="-DTRACEMEM"
else
        TRACEMEM=""
fi
AC_SUBST(TRACEMEM)

dnl --------------- allow --disable-flists to disable memory functions
AC_ARG_ENABLE(flists,
        [  --disable-flists        disable memory management functions],
        [with_flists=$enableval],
        [with_flists=yes],
)
if test "$with_flists" = no; then
        FLISTS="-DNOFLISTS"
else
        FLISTS=""
fi
AC_SUBST(FLISTS)

dnl --------------- allow --with-socket to specify socket for rxstack
AC_ARG_WITH(socket,
        [  --with-socket=9999      socket to use for external queues (default 5757)],
        [with_socket=$withval],
        [with_socket=no],
)
if test "$with_socket" = no; then
        REXXSOCKET=""
else
        REXXSOCKET="-DRXSOCKET=$with_socket"
fi
AC_SUBST(REXXSOCKET)

dnl --------------- allow --with-dlfcnincdir to enable compiling with dlfcn.h on platforms that don't provide dl*() functions natively
AC_ARG_WITH(dlfcnincdir,
        [  --with-dlfcnincdir      location of dlfcn.h],
        [with_dlfcnincdir=$withval],
        [with_dlfcnincdir=no],
)
if test "$with_dlfcnincdir" = no; then
        DLFCNINCDIR=""
        AC_CHECK_HEADERS( dlfcn.h )
else
        if test -f "$with_dlfcnincdir/dlfcn.h"; then
           DLFCNINCDIR="-I$with_dlfcnincdir"
           HAVE_DLFCN_H="1"
           AC_DEFINE(HAVE_DLFCN_H)
        else
           AC_MSG_ERROR(dlfcn.h not found in \"$with_dlfcnincdir\" as specified in --with-dlfcnincdir switch; cannot continue)
        fi
fi
AC_SUBST(DLFCNINCDIR)

dnl --------------- allow --with-dlfcnlibdir to enable compiling with dlfcn.h on platforms that don't provide dl*() functions natively
AC_REQUIRE([MH_SHLPST])
AC_ARG_WITH(dlfcnlibdir,
        [  --with-dlfcnlibdir      location of libdl.a(AIX) libdl.dylib(MacOSX)],
        [with_dlfcnlibdir=$withval],
        [with_dlfcnlibdir=no],
)
if test "$with_dlfcnlibdir" = no; then
        DLFCNLIBDIR=""
else
        if test -f "$with_dlfcnlibdir/libdl$SHLPST"; then
           DLFCNLIBDIR="-L$with_dlfcnlibdir -ldl"
        else
           AC_MSG_ERROR(libdl$SHLPST not found in \"$with_dlfcnlibdir\" as specified in --with-dlfcnlibdir switch; cannot continue)
        fi
fi
AC_SUBST(DLFCNLIBDIR)

dnl --------------- Check how to make shared libraries -------------------
dnl MH_SHARED_LIBRARY must be called after determining if POSIX threads is specified
MH_SHARED_LIBRARY

dnl --------------- Check if underscore is needed in loadable modules ----
dnl MH_CHECK_LEADING_USCORE must be called after processing --with-dlfcn[inc,lib]dir switches
MH_CHECK_LEADING_USCORE

dnl --------------- Force definition of pre-compiler macro UNIX ----------
AC_DEFINE(UNIX)

dnl --------------- where to install startup/shutdown scripts ------------
STARTUPDIR="/etc"
if test -d /etc/rc.d/init.d; then
	STARTUPDIR="/etc/rc.d/init.d"
else
	if test -d /etc/init.d; then
		STARTUPDIR="/etc/init.d"
	fi
fi
AC_SUBST(STARTUPDIR)
AC_SUBST(VERSION)
AC_SUBST(VERSION_NODOT)

dnl AC_OUTPUT(Makefile)

AC_OUTPUT($mymakefile regina-config rxstack.init.d)
chmod 755 regina-config

case "$target" in
        *ibm-aix*)
                mv Makefile.aix Makefile
                AC_MSG_RESULT(renaming Makefile.aix to Makefile)
                ;;
        *)
                ;;
esac
