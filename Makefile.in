#
# Makefile for Regina Rexx Interpreter
#
# The variable 'srcdir' refers to the source-distribution, and can be set with
# the configure script by "--srcdir=DIR".
# You may want to enable multi-threading by setting "--enable-posix-threads"
# in the configure script.
#

SHELL  = /bin/sh
THIS  = Makefile

@SET_MAKE@

ABI_MAJOR=3
ABI_MINOR=3
ABI=$(ABI_MAJOR).$(ABI_MINOR)
VER=@VERSION_NODOT@
VERDOT=@VERSION@
REG_DIR=Regina-$(VERDOT)

srcdir  = @srcdir@
commondir = $(srcdir)/common
prefix  = @prefix@
exec_prefix = @exec_prefix@
libdir  = @libdir@
bindir  = @bindir@
includedir  = @includedir@
mandir  = @mandir@
datadir = @datadir@
sharedir = $(datadir)/regina
target = @target@
gcidir = $(srcdir)/gci

INSTALL  = $(srcdir)/install-sh

CC  = @CC@
RANLIB = @RANLIB@
LN_S  = @LN_S@
CFLAGS = @CFLAGS@

RANLIB_DYNAMIC = @RANLIB_DYNAMIC@
CEXTRA = @CEXTRA@ @DLFCNINCDIR@ -DREGINA_SHARE_DIRECTORY=\"$(sharedir)\" @MH_UNSIGNED_CHAR_SWITCH@
DEBUG = @DEBUG@
TRACEMEM = @TRACEMEM@
FLISTS = @FLISTS@
THREADING_COMPILE = @THREADING_COMPILE@
THREADING_LINK = @THREADING_LINK@
THREADSAFE_TARGET = @THREADSAFE_TARGET@
SHL_SCRIPT = @SHL_SCRIPT@
MH_MT_LIBS = @MH_MT_LIBS@
EEXTRA = @EEXTRA@
EXECISER_DEP = @EXECISER_DEP@
LIBPRE = @LIBPRE@
LIBFILE = @LIBFILE@
SHLFILE = @SHLFILE@
ALLOCA = @ALLOCA@
ALLOCA_SHO = @ALLOCA_SHO@
GCI_SHO=@GCI_SHO@
MT_FILE = @MT_FILE@
STATICLD_SHO = @STATICLD_SHO@
STATICLIB = @STATICLIB@
STATIC_LDFLAGS = @STATIC_LDFLAGS@
OSAVE = @OSAVE@
OBJ = @OBJ@
EXE = @EXE@
LIBPST = @LIBPST@
LIBEXE = @LIBEXE@
LIBFLAGS = @LIBFLAGS@
LIBLINK = @LIBLINK@
LINKSHL = @LINKSHL@
LINKREG = @LINKREG@
SHLPRE = @SHLPRE@
SHLPST = @SHLPST@
MODPST = @MODPST@
BUNDLE = @BUNDLE@
GETOPT = @GETOPT@
REXXSOCKET = @REXXSOCKET@
OBJECTS  = @OBJECTS@
DYN_COMP = @DYN_COMP@
SYS_DEFS = @SYS_DEFS@
SHLIBS = @SHLIBS@ @DLFCNLIBDIR@ @EFENCE@
BOTHLIBS = @BOTHLIBS@ $(SHLIBS)
LD_RXLIB_A1 = @LD_RXLIB_A1@
LD_RXLIB_A2 = @LD_RXLIB_A2@
LD_RXLIB_B1 = @LD_RXLIB_B1@
LD_RXLIB_B2 = @LD_RXLIB_B2@
DYNAMIC_LDFLAGS = @DYNAMIC_LDFLAGS@
SHL_LD = @SHL_LD@
SHL_TARGETS = @SHL_TARGETS@
OTHER_INSTALLS = @OTHER_INSTALLS@
BASE_INSTALL = @BASE_INSTALL@
BASE_BINARY = @BASE_BINARY@
USE_ABI = @USE_ABI@
O2SAVE = @O2SAVE@
O2SHO = @O2SHO@
CC2O = @CC2O@
SAVE2O = @SAVE2O@
PURIFY = @PURIFY@
sysconfdir = @sysconfdir@
TEST1EXP = @TEST1EXP@
TEST2EXP = @TEST2EXP@
TEST1EXPORTS = @TEST1EXPORTS@
TEST2EXPORTS = @TEST2EXPORTS@
REGINAEXP = @REGINAEXP@
HAVE_GCI = @HAVE_GCI@
GCI_CONVERT_HEADER = @GCI_CONVERT_HEADER@

MISCDEFS = -DHAVE_CONFIG_H $(HAVE_GCI) $(TRACEMEM) $(FLISTS) -I. -I$(srcdir) $(SYS_DEFS) $(REXXSOCKET)

COPT = $(DEBUG) $(CFLAGS) $(CEXTRA) $(MISCDEFS)
TSCOPT = $(DEBUG) $(CFLAGS) $(CEXTRA) $(MISCDEFS) $(THREADING_COMPILE)
COPTPROG = $(DEBUG) $(CFLAGS) $(CEXTRA) $(MISCDEFS)
LINKOPT = $(DEBUG) $(CFLAGS) $(EEXTRA)
TSLINKOPT = $(LINKOPT) $(THREADING_LINK)

README = $(REG_DIR)/README.??? $(REG_DIR)/README.?? $(REG_DIR)/README.Unix \
	$(REG_DIR)/README.BeOS $(REG_DIR)/README_SAFE $(REG_DIR)/COPYING-LIB \
	$(REG_DIR)/INSTALL $(REG_DIR)/regina.1 $(REG_DIR)/BUGS $(REG_DIR)/TODO \
	$(REG_DIR)/HACKERS.txt $(REG_DIR)/README.MacOSX $(REG_DIR)/README.STATIC
ZIP_README = README.??? README.?? README.Unix README.BeOS README_SAFE \
	COPYING-LIB INSTALL regina.1 BUGS TODO HACKERS.txt README.MacOSX README.STATIC

CSRCFILES = $(REG_DIR)/funcs.c $(REG_DIR)/builtin.c $(REG_DIR)/error.c $(REG_DIR)/variable.c \
	$(REG_DIR)/interprt.c $(REG_DIR)/debug.c $(REG_DIR)/dbgfuncs.c $(REG_DIR)/memory.c $(REG_DIR)/parsing.c $(REG_DIR)/files.c \
	$(REG_DIR)/misc.c $(REG_DIR)/unxfuncs.c $(REG_DIR)/cmsfuncs.c $(REG_DIR)/os2funcs.c $(REG_DIR)/shell.c $(REG_DIR)/rexxext.c $(REG_DIR)/stack.c \
	$(REG_DIR)/tracing.c $(REG_DIR)/interp.c $(REG_DIR)/cmath.c $(REG_DIR)/convert.c $(REG_DIR)/strings.c $(REG_DIR)/library.c \
	$(REG_DIR)/strmath.c $(REG_DIR)/signals.c $(REG_DIR)/macros.c $(REG_DIR)/envir.c $(REG_DIR)/expr.c \
	$(REG_DIR)/wrappers.c $(REG_DIR)/options.c $(REG_DIR)/doscmd.c \
	$(REG_DIR)/alloca.c $(REG_DIR)/vmscmd.c $(REG_DIR)/vmsfuncs.c $(REG_DIR)/arxfuncs.c \
	$(REG_DIR)/staticld.c \
	$(REG_DIR)/mt_notmt.c $(REG_DIR)/mt_win32.c $(REG_DIR)/mt_posix.c $(REG_DIR)/mt_os2.c $(REG_DIR)/nosaa.c $(REG_DIR)/instore.c \
	$(REG_DIR)/ntservice/service.c \
	$(REG_DIR)/common/rxpack.c $(REG_DIR)/common/rxpack.h $(REG_DIR)/common/rxdef.h $(REG_DIR)/apphead.h \
	$(REG_DIR)/common/*.nsh $(REG_DIR)/common/*.ico \
	$(REG_DIR)/gci/*.c $(REG_DIR)/gci/*.h $(REG_DIR)/gci/00README \
	$(REG_DIR)/gci/gci_convert.linux.* $(REG_DIR)/gci/gci_convert.win32.* $(REG_DIR)/gci/gci_convert.unsupported \
	$(REG_DIR)/gci/gci_convert.os2.* $(REG_DIR)/gci/gci_convert.macX.* $(REG_DIR)/gci/gci_convert.solaris.*

ZIP_CSRCFILES = funcs.c builtin.c error.c variable.c \
	interprt.c debug.c dbgfuncs.c memory.c parsing.c files.c \
	misc.c unxfuncs.c cmsfuncs.c os2funcs.c shell.c rexxext.c stack.c \
	tracing.c interp.c cmath.c convert.c strings.c library.c \
	strmath.c signals.c macros.c envir.c expr.c \
	wrappers.c options.c doscmd.c \
	alloca.c vmscmd.c vmsfuncs.c arxfuncs.c \
	staticld.c \
	mt_notmt.c mt_win32.c mt_posix.c mt_os2.c nosaa.c instore.c \
	ntservice/service.c \
	common/rxpack.c common/rxpack.h common/rxdef.h apphead.h \
	common/*.nsh common/*.ico \
	gci/*.c gci/*.h gci/00README \
	gci/gci_convert.linux.* gci/gci_convert.win32.* gci/gci_convert.unsupported \
	gci/gci_convert.os2.* gci/gci_convert.macX.* gci/gci_convert.solaris.*

OFILES = funcs.$(OBJ) builtin.$(OBJ) error.$(OBJ) variable.$(OBJ) \
	interprt.$(OBJ) debug.$(OBJ) dbgfuncs.$(OBJ) memory.$(OBJ) parsing.$(OBJ) files.$(OBJ) \
	misc.$(OBJ) unxfuncs.$(OBJ) cmsfuncs.$(OBJ) os2funcs.$(OBJ) shell.$(OBJ) rexxext.$(OBJ) stack.$(OBJ) \
	tracing.$(OBJ) interp.$(OBJ) cmath.$(OBJ) convert.$(OBJ) strings.$(OBJ) library.$(OBJ) \
	strmath.$(OBJ) signals.$(OBJ) macros.$(OBJ) envir.$(OBJ) expr.$(OBJ) extstack.$(OBJ) \
	yaccsrc.$(OBJ) lexsrc.$(OBJ) options.$(OBJ) doscmd.$(OBJ) rexxbif.$(OBJ) \
	wrappers.$(OBJ) $(ALLOCA) mt_notmt.$(OBJ) instore.$(OBJ) arxfuncs.$(OBJ)

SHOFILES = funcs.sho builtin.sho error.sho variable.sho \
	interprt.sho debug.sho dbgfuncs.sho memory.sho parsing.sho files.sho \
	misc.sho unxfuncs.sho cmsfuncs.sho shell.sho os2funcs.sho rexxext.sho stack.sho \
	tracing.sho interp.sho cmath.sho convert.sho strings.sho library.sho \
	strmath.sho signals.sho macros.sho envir.sho expr.sho extstack.sho \
	yaccsrc.sho lexsrc.sho wrappers.sho options.sho doscmd.sho rexxbif.sho \
	drexx.sho client.sho rexxsaa.sho $(ALLOCA_SHO) $(STATICLD_SHO) $(MT_FILE).sho instore.sho arxfuncs.sho \
	$(GCI_SHO)

DEMODIR = $(REG_DIR)/demo
ZIP_DEMODIR = demo
DEMOFILES = $(DEMODIR)/*.rexx
ZIP_DEMOFILES = $(ZIP_DEMODIR)/*.rexx

TRIPDIR = $(REG_DIR)/trip
ZIP_TRIPDIR = trip
TRIPFILES = $(TRIPDIR)/README $(TRIPDIR)/*.rexx $(TRIPDIR)/rc.c $(TRIPDIR)/std.c $(TRIPDIR)/true.c $(TRIPDIR)/vms.test $(TRIPDIR)/testing
ZIP_TRIPFILES = $(ZIP_TRIPDIR)/README $(ZIP_TRIPDIR)/*.rexx $(ZIP_TRIPDIR)/rc.c $(ZIP_TRIPDIR)/std.c $(ZIP_TRIPDIR)/true.c $(ZIP_TRIPDIR)/vms.test $(ZIP_TRIPDIR)/testing

CONTRIBDIR = $(REG_DIR)/contrib
ZIP_CONTRIBDIR = contrib
CONTRIBFILES = $(CONTRIBDIR)/flex.skl $(CONTRIBDIR)/checker.c $(CONTRIBDIR)/acsite.m4
ZIP_CONTRIBFILES = $(ZIP_CONTRIBDIR)/flex.skl $(ZIP_CONTRIBDIR)/checker.c $(ZIP_CONTRIBDIR)/acsite.m4

GCIHEADERS = $(gcidir)/gci.h $(gcidir)/embedded.h

CONFFILES = $(REG_DIR)/configure.in $(REG_DIR)/config.h.in $(REG_DIR)/Makefile.in $(REG_DIR)/Makefile.aix.in \
	$(REG_DIR)/install-sh $(REG_DIR)/config.guess $(REG_DIR)/config.sub $(REG_DIR)/aclocal.m4 \
	$(REG_DIR)/configure $(REG_DIR)/descrip.mms $(REG_DIR)/build.com $(REG_DIR)/regina-config.in \
	$(REG_DIR)/Regina-*.spec $(REG_DIR)/rxstack.init.d.in \
	$(REG_DIR)/regina_*.ini $(REG_DIR)/regina.nsi
ZIP_CONFFILES = configure.in config.h.in Makefile.in Makefile.aix.in \
	install-sh config.guess config.sub aclocal.m4 \
	configure descrip.mms build.com regina-config.in \
	Regina-*.spec rxstack.init.d.in \
	regina_*.ini regina.nsi

EPOC32FILES = $(REG_DIR)/epoc32/bmarm/*.def \
	$(REG_DIR)/epoc32/*.cpp $(REG_DIR)/epoc32/*.h \
	$(REG_DIR)/epoc32/bwins/*.def $(REG_DIR)/epoc32/makefile \
	$(REG_DIR)/epoc32/recrexx/*.cpp $(REG_DIR)/epoc32/recrexx/*.h $(REG_DIR)/epoc32/recrexx/*.mbm \
	$(REG_DIR)/epoc32/regina.rtf $(REG_DIR)/epoc32/regina.alp  \
	$(REG_DIR)/epoc32/regina.order $(REG_DIR)/epoc32/uk.* \
	$(REG_DIR)/epoc32/*.mmp $(REG_DIR)/epoc32/*.bat \
	$(REG_DIR)/epoc32/*.pkg $(REG_DIR)/epoc32/*.tpl
ZIP_EPOC32FILES = epoc32/bmarm/*.def epoc32/bwins/*.def epoc32/makefile \
	epoc32/*.cpp epoc32/*.h \
	epoc32/recrexx/*.cpp epoc32/recrexx/*.h epoc32/recrexx/*.mbm \
	epoc32/regina.rtf epoc32/regina.alp epoc32/regina.order epoc32/uk.* \
	epoc32/*.mmp epoc32/*.bat epoc32/*.pkg epoc32/*.tpl

YACCLEX_FILES = $(REG_DIR)/yaccsrc.y $(REG_DIR)/lexsrc.l
ZIP_YACCLEX_FILES = yaccsrc.y lexsrc.l

ALLSRC = $(CFILES) $(HFILES)
ZIP_ALLSRC = $(ZIP_CFILES) $(ZIP_HFILES)

MTSSRC = $(srcdir)/en.mts $(srcdir)/pt.mts $(srcdir)/no.mts \
	$(srcdir)/de.mts $(srcdir)/es.mts  $(srcdir)/pl.mts
TAR_MTSSRC = $(REG_DIR)/en.mts $(REG_DIR)/pt.mts $(REG_DIR)/no.mts \
	$(REG_DIR)/de.mts $(REG_DIR)/es.mts $(REG_DIR)/pl.mts
ZIP_MTSSRC = en.mts pt.mts no.mts de.mts es.mts pl.mts

MTBFILES = en.mtb pt.mtb no.mtb de.mtb es.mtb pl.mtb

HFILES = $(REG_DIR)/rexx.h $(REG_DIR)/regina_c.h $(REG_DIR)/defs.h $(REG_DIR)/extern.h $(REG_DIR)/regina_t.h \
	 $(REG_DIR)/strings.h $(REG_DIR)/configur.h $(REG_DIR)/yaccsrc.h $(REG_DIR)/wrappers.h \
	 $(REG_DIR)/rxiface.h $(REG_DIR)/rexxsaa.h $(REG_DIR)/utsname.h $(REG_DIR)/vms.h $(REG_DIR)/rexxmsg.h \
	 $(REG_DIR)/mt.h $(REG_DIR)/mt_notmt.h $(REG_DIR)/mt_win32.h $(REG_DIR)/mt_os2.h $(REG_DIR)/mt_posix.h \
	 $(REG_DIR)/rexxbif.h $(REG_DIR)/extstack.h $(REG_DIR)/ntservice/service.h $(REG_DIR)/mac.h
ZIP_HFILES = rexx.h regina_c.h defs.h extern.h regina_t.h \
	 strings.h configur.h yaccsrc.h wrappers.h \
	 rxiface.h rexxsaa.h utsname.h vms.h rexxmsg.h \
	 mt.h mt_notmt.h mt_win32.h mt_os2.h mt_posix.h \
	 rexxbif.h extstack.h ntservice/service.h mac.h

CFILES = $(CSRCFILES) $(REG_DIR)/yaccsrc.c $(REG_DIR)/lexsrc.c $(REG_DIR)/execiser.c $(REG_DIR)/threader.c \
	 $(REG_DIR)/rexxsaa.c $(REG_DIR)/rexx.c $(REG_DIR)/regina.c $(REG_DIR)/client.c \
	 $(REG_DIR)/test1.c $(REG_DIR)/test2.c $(REG_DIR)/getopt.c \
	 $(REG_DIR)/rxqueue.c $(REG_DIR)/rxstack.c $(REG_DIR)/rexxbif.c $(REG_DIR)/extstack.c $(REG_DIR)/mac.c $(REG_DIR)/msgcmp.c
ZIP_CFILES = $(ZIP_CSRCFILES) yaccsrc.c lexsrc.c execiser.c threader.c \
	 rexxsaa.c rexx.c regina.c client.c \
	 test1.c test2.c getopt.c \
	 rxqueue.c rxstack.c rexxbif.c extstack.c mac.c msgcmp.c

JUNK = *.o *.sho $(STATICLIB) execiser$(EXE) threader$(EXE) rxqueue$(EXE) rxstack$(EXE) rexx$(EXE) msgcmp$(EXE) $(SHL_TARGETS) $(SHLPRE)$(SHLFILE)$(SHLPST)* config.cache config.log gci_convert.h *.mtb

#.SUFFIXES: .sho $(SUFFIXES)
#
# Do not use default suffixes rule
#
.SUFFIXES:

all : rexx$(EXE) $(STATICLIB) execiser$(EXE) $(SHL_TARGETS) $(THREADSAFE_TARGET) rxstack$(EXE) rxqueue$(EXE) $(MTBFILES)

$(srcdir)/rexx.h : $(srcdir)/extern.h $(srcdir)/strings.h $(srcdir)/defs.h $(srcdir)/regina_t.h $(srcdir)/mt.h

$(srcdir)/mt.h : $(srcdir)/mt_notmt.h $(srcdir)/mt_posix.h

rexx$(EXE) : $(OFILES) rexx.$(OBJ) nosaa.$(OBJ)
	$(PURIFY) $(CC) $(LINKOPT) $(STATIC_LDFLAGS) -o rexx$(EXE) $(OBJECTS) rexx.$(OBJ) nosaa.$(OBJ) $(BOTHLIBS)
	$(LDEXTRA)

regina$(EXE) : $(SHL_BASE) regina.$(OBJ)
	$(PURIFY) $(CC) $(TSLINKOPT ) $(DYNAMIC_LDFLAGS) -o regina$(EXE) regina.$(OBJ) $(LINKREG) $(BOTHLIBS) $(MH_MT_LIBS)
	$(LDEXTRA)

execiser$(EXE) : execiser.$(OBJ) $(EXECISER_DEP)
	$(PURIFY) $(CC) $(TSLINKOPT) -o execiser execiser.$(OBJ) $(LINKSHL) $(BOTHLIBS) $(MH_MT_LIBS)
	$(LDEXTRA)

threader$(EXE) : threader.$(OBJ) $(SHLPRE)$(SHLFILE)$(SHLPST)
	$(PURIFY) $(CC) $(TSLINKOPT) -o threader threader.$(OBJ) $(LINKSHL) $(BOTHLIBS) $(MH_MT_LIBS)
	$(LDEXTRA)

rxstack$(EXE) : rxstack.$(OBJ) erexxbif.$(OBJ) eextstack.$(OBJ)
	$(PURIFY) $(CC) $(LINKOPT) $(DYNAMIC_LDFLAGS) -o rxstack$(EXE) rxstack.$(OBJ) erexxbif.$(OBJ) eextstack.$(OBJ) $(GETOPT) $(BOTHLIBS)
	$(LDEXTRA)

rxqueue$(EXE) : rxqueue.$(OBJ) erexxbif.$(OBJ) eextstack.$(OBJ)
	$(PURIFY) $(CC) $(LINKOPT) $(DYNAMIC_LDFLAGS) -o rxqueue$(EXE) rxqueue.$(OBJ) erexxbif.$(OBJ) eextstack.$(OBJ) $(GETOPT) $(BOTHLIBS)
	$(LDEXTRA)

$(LIBPRE)$(LIBFILE)$(LIBPST): $(OFILES) client.$(OBJ) drexx.$(OBJ) rexxsaa.$(OBJ)
	$(LIBEXE) $(LIBFLAGS) $(OBJECTS) client.$(OBJ) drexx.$(OBJ) rexxsaa.$(OBJ)
	-$(RANLIB) $(LIBPRE)$(LIBFILE)$(LIBPST)

$(SHLPRE)$(SHLFILE)$(SHLPST): $(SHOFILES) $(REGINAEXP)
	$(SHL_LD)
	$(RANLIB_DYNAMIC)

$(SHLPRE)$(SHLFILE)$(SHLPST).$(ABI): $(SHOFILES)
	$(SHL_LD)
	-rm -f $(SHLPRE)$(SHLFILE)$(SHLPST).$(ABI_MAJOR)
	-$(LN_S) $(SHLPRE)$(SHLFILE)$(SHLPST).$(ABI) $(SHLPRE)$(SHLFILE)$(SHLPST).$(ABI_MAJOR)
	-rm -f $(SHLPRE)$(SHLFILE)$(SHLPST)
	-$(LN_S) $(SHLPRE)$(SHLFILE)$(SHLPST).$(ABI) $(SHLPRE)$(SHLFILE)$(SHLPST)


#
# Rules for lex and yacc source - not used at this stage
#
#$(srcdir)/yaccsrc.h $(srcdir)/yaccsrc.c: $(srcdir)/yaccsrc.y
#	bison -p__regina -o$(srcdir)/yaccsrc.c -d $(srcdir)/yaccsrc.y
#
#$(srcdir)/lexsrc.c: $(srcdir)/lexsrc.l
#	flex -P__regina -Scontrib/flex.skl -8 -o$(srcdir)/lexsrc.c $(srcdir)/lexsrc.l
#
# temporary rules
#
yaccsrc:
	bison -p__regina -o$(srcdir)/yaccsrc.c -d $(srcdir)/yaccsrc.y

lexsrc:
	flex -P__regina -Scontrib/flex.skl -8 -o$(srcdir)/lexsrc.c $(srcdir)/lexsrc.l

#
# Convert .mts to .mtb
#
$(MTBFILES): msgcmp$(EXE) $(MTSSRC)
	./msgcmp $(MTSSRC)
	./rexx $(srcdir)/checkmts.rexx $(srcdir)

msgcmp$(EXE): msgcmp.$(OBJ)
	$(PURIFY) $(CC) $(LINKOPT) -o msgcmp$(EXE) msgcmp.$(OBJ)

msgcmp.$(OBJ): $(srcdir)/msgcmp.c $(srcdir)/rexxmsg.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/msgcmp.c

#
# Rules for static objects
#
funcs.$(OBJ) : $(srcdir)/funcs.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/funcs.c

builtin.$(OBJ) : $(srcdir)/builtin.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/builtin.c

error.$(OBJ) : $(srcdir)/error.c $(srcdir)/rexx.h $(srcdir)/rexxmsg.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/error.c

variable.$(OBJ) :$(srcdir)/variable.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/variable.c

interprt.$(OBJ) :$(srcdir)/interprt.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/interprt.c

debug.$(OBJ) : $(srcdir)/debug.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/debug.c

dbgfuncs.$(OBJ) :$(srcdir)/dbgfuncs.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/dbgfuncs.c

memory.$(OBJ) :  $(srcdir)/memory.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/memory.c

parsing.$(OBJ) : $(srcdir)/parsing.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/parsing.c

files.$(OBJ) : $(srcdir)/files.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/files.c

misc.$(OBJ) :  $(srcdir)/misc.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/misc.c

unxfuncs.$(OBJ) :$(srcdir)/unxfuncs.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/unxfuncs.c

os2funcs.$(OBJ) :$(srcdir)/os2funcs.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/os2funcs.c

cmsfuncs.$(OBJ) :$(srcdir)/cmsfuncs.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/cmsfuncs.c

arxfuncs.$(OBJ) :$(srcdir)/arxfuncs.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/arxfuncs.c

shell.$(OBJ) : $(srcdir)/shell.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/shell.c

rexxext.$(OBJ) : $(srcdir)/rexxext.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/rexxext.c

stack.$(OBJ) : $(srcdir)/stack.c $(srcdir)/extstack.h $(srcdir)/rexxbif.h $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/stack.c

tracing.$(OBJ) : $(srcdir)/tracing.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/tracing.c

interp.$(OBJ) :  $(srcdir)/interp.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/interp.c

cmath.$(OBJ) : $(srcdir)/cmath.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/cmath.c

convert.$(OBJ) : $(srcdir)/convert.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/convert.c

strings.$(OBJ) : $(srcdir)/strings.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/strings.c

library.$(OBJ) : $(srcdir)/library.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/library.c

strmath.$(OBJ) : $(srcdir)/strmath.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/strmath.c

signals.$(OBJ) : $(srcdir)/signals.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/signals.c

macros.$(OBJ) :  $(srcdir)/macros.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/macros.c

envir.$(OBJ) : $(srcdir)/envir.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/envir.c

expr.$(OBJ) :  $(srcdir)/expr.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/expr.c

wrappers.$(OBJ) :$(srcdir)/wrappers.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/wrappers.c

options.$(OBJ) : $(srcdir)/options.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/options.c

doscmd.$(OBJ) :  $(srcdir)/doscmd.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/doscmd.c

rexx.$(OBJ) :  $(srcdir)/rexx.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/rexx.c

client.$(OBJ) :    $(srcdir)/client.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/client.c

rexxsaa.$(OBJ) :    $(srcdir)/rexxsaa.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/rexxsaa.c

regina.$(OBJ) :  $(srcdir)/regina.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(THREADING_COMPILE) $(srcdir)/regina.c

drexx.$(OBJ) : $(srcdir)/rexx.c $(srcdir)/rexx.h
	-mv rexx.$(OBJ) rexx$(OSAVE)
	$(CC) $(COPT) -c -DRXLIB $(srcdir)/rexx.c
	-mv rexx.$(OBJ) drexx.$(OBJ)
	-mv rexx$(OSAVE) rexx.$(OBJ)

lexsrc.$(OBJ) : $(srcdir)/lexsrc.c $(srcdir)/rexx.h $(srcdir)/yaccsrc.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/lexsrc.c

yaccsrc.$(OBJ) : $(srcdir)/yaccsrc.c $(srcdir)/defs.h $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c -DYYMAXDEPTH=10000 $(srcdir)/yaccsrc.c

execiser.$(OBJ) : $(srcdir)/execiser.c $(srcdir)/rexx.h
	$(CC) $(COPTPROG) $(CC2O) -c $(srcdir)/execiser.c

threader.$(OBJ) : $(srcdir)/threader.c $(srcdir)/rexxsaa.h
	$(CC) $(COPTPROG) $(CC2O) -DPOSIX_THREADS -c $(srcdir)/threader.c

getopt.$(OBJ) : $(srcdir)/getopt.c
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/getopt.c

alloca.$(OBJ) :    $(srcdir)/alloca.c
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/alloca.c

mt_notmt.$(OBJ) : $(srcdir)/mt_notmt.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/mt_notmt.c

mt_posix.$(OBJ) : $(srcdir)/mt_posix.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/mt_posix.c

nosaa.$(OBJ) : $(srcdir)/nosaa.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/nosaa.c

instore.$(OBJ) : $(srcdir)/instore.c $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/instore.c

extstack.$(OBJ) : $(srcdir)/extstack.c $(srcdir)/extstack.h $(srcdir)/rexxbif.h $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/extstack.c

rexxbif.$(OBJ) : $(srcdir)/rexxbif.c $(srcdir)/rexxbif.h $(srcdir)/rexx.h
	$(CC) $(COPT) $(CC2O) -c $(srcdir)/rexxbif.c

rxstack.$(OBJ) : $(srcdir)/rxstack.c $(srcdir)/rexxbif.h $(srcdir)/rexx.h
	$(CC) -DEXTERNAL_TO_REGINA $(COPT) $(CC2O) -c $(srcdir)/rxstack.c

rxqueue.$(OBJ) : $(srcdir)/rxqueue.c $(srcdir)/rexxbif.h $(srcdir)/rexx.h
	$(CC) -DEXTERNAL_TO_REGINA $(COPT) $(CC2O) -c $(srcdir)/rxqueue.c

eextstack.$(OBJ) : $(srcdir)/extstack.c $(srcdir)/extstack.h $(srcdir)/rexxbif.h $(srcdir)/rexx.h
	-mv extstack.$(OBJ) extstack$(OSAVE)
	$(CC) -DEXTERNAL_TO_REGINA $(COPT) -c $(srcdir)/extstack.c
	-mv extstack.$(OBJ) eextstack.$(OBJ)
	-mv extstack$(OSAVE) extstack.$(OBJ)

erexxbif.$(OBJ) : $(srcdir)/rexxbif.c $(srcdir)/rexxbif.h $(srcdir)/rexx.h
	-mv rexxbif.$(OBJ) rexxbif$(OSAVE)
	$(CC) -DEXTERNAL_TO_REGINA $(COPT) -c $(srcdir)/rexxbif.c
	-mv rexxbif.$(OBJ) erexxbif.$(OBJ)
	-mv rexxbif$(OSAVE) rexxbif.$(OBJ)

#
# Rules for shared objects
#
funcs.sho :   $(srcdir)/funcs.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/funcs.c
	$(O2SHO)
	$(SAVE2O)

builtin.sho : $(srcdir)/builtin.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/builtin.c
	$(O2SHO)
	$(SAVE2O)

error.sho :   $(srcdir)/error.c $(srcdir)/rexx.h $(srcdir)/rexxmsg.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/error.c
	$(O2SHO)
	$(SAVE2O)

variable.sho :$(srcdir)/variable.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/variable.c
	$(O2SHO)
	$(SAVE2O)

interprt.sho :$(srcdir)/interprt.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/interprt.c
	$(O2SHO)
	$(SAVE2O)

debug.sho :   $(srcdir)/debug.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/debug.c
	$(O2SHO)
	$(SAVE2O)

dbgfuncs.sho :$(srcdir)/dbgfuncs.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/dbgfuncs.c
	$(O2SHO)
	$(SAVE2O)

memory.sho :  $(srcdir)/memory.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/memory.c
	$(O2SHO)
	$(SAVE2O)

parsing.sho : $(srcdir)/parsing.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/parsing.c
	$(O2SHO)
	$(SAVE2O)

files.sho :   $(srcdir)/files.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/files.c
	$(O2SHO)
	$(SAVE2O)

misc.sho :    $(srcdir)/misc.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/misc.c
	$(O2SHO)
	$(SAVE2O)

unxfuncs.sho :$(srcdir)/unxfuncs.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/unxfuncs.c
	$(O2SHO)
	$(SAVE2O)

arxfuncs.sho :$(srcdir)/arxfuncs.c
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/arxfuncs.c
	$(O2SHO)
	$(SAVE2O)

os2funcs.sho :$(srcdir)/os2funcs.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/os2funcs.c
	$(O2SHO)
	$(SAVE2O)

cmsfuncs.sho :$(srcdir)/cmsfuncs.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/cmsfuncs.c
	$(O2SHO)
	$(SAVE2O)

shell.sho :   $(srcdir)/shell.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/shell.c
	$(O2SHO)
	$(SAVE2O)

rexxext.sho : $(srcdir)/rexxext.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/rexxext.c
	$(O2SHO)
	$(SAVE2O)

stack.sho :   $(srcdir)/stack.c $(srcdir)/extstack.h $(srcdir)/rexxbif.h $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/stack.c
	$(O2SHO)
	$(SAVE2O)

extstack.sho :   $(srcdir)/extstack.c $(srcdir)/extstack.h $(srcdir)/rexxbif.h $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/extstack.c
	$(O2SHO)
	$(SAVE2O)

rexxbif.sho :   $(srcdir)/rexxbif.c $(srcdir)/rexxbif.h $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/rexxbif.c
	$(O2SHO)
	$(SAVE2O)

tracing.sho : $(srcdir)/tracing.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/tracing.c
	$(O2SHO)
	$(SAVE2O)

interp.sho :  $(srcdir)/interp.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/interp.c
	$(O2SHO)
	$(SAVE2O)

cmath.sho :   $(srcdir)/cmath.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/cmath.c
	$(O2SHO)
	$(SAVE2O)

convert.sho : $(srcdir)/convert.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/convert.c
	$(O2SHO)
	$(SAVE2O)

strings.sho : $(srcdir)/strings.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/strings.c
	$(O2SHO)
	$(SAVE2O)

library.sho : $(srcdir)/library.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/library.c
	$(O2SHO)
	$(SAVE2O)

strmath.sho : $(srcdir)/strmath.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/strmath.c
	$(O2SHO)
	$(SAVE2O)

signals.sho : $(srcdir)/signals.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/signals.c
	$(O2SHO)
	$(SAVE2O)

macros.sho :  $(srcdir)/macros.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/macros.c
	$(O2SHO)
	$(SAVE2O)

envir.sho :   $(srcdir)/envir.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/envir.c
	$(O2SHO)
	$(SAVE2O)

expr.sho :    $(srcdir)/expr.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/expr.c
	$(O2SHO)
	$(SAVE2O)

wrappers.sho :$(srcdir)/wrappers.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/wrappers.c
	$(O2SHO)
	$(SAVE2O)

options.sho : $(srcdir)/options.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/options.c
	$(O2SHO)
	$(SAVE2O)

doscmd.sho :  $(srcdir)/doscmd.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/doscmd.c
	$(O2SHO)
	$(SAVE2O)

rexx.sho :  $(srcdir)/rexx.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/rexx.c
	$(O2SHO)
	$(SAVE2O)

client.sho :  $(srcdir)/client.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/client.c
	$(O2SHO)
	$(SAVE2O)

rexxsaa.sho :  $(srcdir)/rexxsaa.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/rexxsaa.c
	$(O2SHO)
	$(SAVE2O)

drexx.sho : $(srcdir)/rexx.c
	-mv rexx.$(OBJ) rexx.$(OBJ).save
	$(CC) $(TSCOPT) $(DYN_COMP) -c -DRXLIB $(srcdir)/rexx.c
	-mv rexx.$(OBJ) drexx.sho
	-mv rexx.$(OBJ).save rexx.$(OBJ)

lexsrc.sho : $(srcdir)/lexsrc.c $(srcdir)/rexx.h $(srcdir)/yaccsrc.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/lexsrc.c
	$(O2SHO)
	$(SAVE2O)

yaccsrc.sho : $(srcdir)/yaccsrc.c $(srcdir)/defs.h $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c -DYYMAXDEPTH=10000 $(srcdir)/yaccsrc.c
	$(O2SHO)
	$(SAVE2O)

alloca.sho :  $(srcdir)/alloca.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/alloca.c
	$(O2SHO)
	$(SAVE2O)

staticld.sho :  $(srcdir)/staticld.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/staticld.c
	$(O2SHO)
	$(SAVE2O)

rxpack.sho :  $(commondir)/rxpack.c $(commondir)/rxpack.h
	$(O2SAVE)
	$(CC) -DUSE_REGINA -DHAVE_PROTO -DDYNAMIC_LIBRARY $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(commondir)/rxpack.c
	$(O2SHO)
	$(SAVE2O)

mt_notmt.sho : $(srcdir)/mt_notmt.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/mt_notmt.c
	$(O2SHO)
	$(SAVE2O)

mt_posix.sho : $(srcdir)/mt_posix.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/mt_posix.c
	$(O2SHO)
	$(SAVE2O)

instore.sho : $(srcdir)/instore.c $(srcdir)/rexx.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(srcdir)/instore.c
	$(O2SHO)
	$(SAVE2O)

#
# Rules for GCI objects
#
gci_convert.h: $(gcidir)/$(GCI_CONVERT_HEADER)
	cp $(gcidir)/$(GCI_CONVERT_HEADER) ./gci_convert.h

gci_call.sho : $(gcidir)/gci_call.c $(GCIHEADERS) gci_convert.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(gcidir)/gci_call.c
	$(O2SHO)
	$(SAVE2O)

gci_convert.sho : $(gcidir)/gci_convert.c $(GCIHEADERS) gci_convert.h
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(gcidir)/gci_convert.c
	$(O2SHO)
	$(SAVE2O)

gci_execute.sho : $(gcidir)/gci_execute.c $(GCIHEADERS)
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(gcidir)/gci_execute.c
	$(O2SHO)
	$(SAVE2O)

gci_helper.sho : $(gcidir)/gci_helper.c $(GCIHEADERS)
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(gcidir)/gci_helper.c
	$(O2SHO)
	$(SAVE2O)

gci_prepare.sho : $(gcidir)/gci_prepare.c $(GCIHEADERS)
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(gcidir)/gci_prepare.c
	$(O2SHO)
	$(SAVE2O)

gci_reginabridge.sho : $(gcidir)/gci_reginabridge.c $(GCIHEADERS)
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(gcidir)/gci_reginabridge.c
	$(O2SHO)
	$(SAVE2O)

gci_rxfuncdefine.sho : $(gcidir)/gci_rxfuncdefine.c $(GCIHEADERS)
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(gcidir)/gci_rxfuncdefine.c
	$(O2SHO)
	$(SAVE2O)

gci_tree.sho : $(gcidir)/gci_tree.c $(GCIHEADERS)
	$(O2SAVE)
	$(CC) $(TSCOPT) $(CC2O) $(DYN_COMP) -c $(gcidir)/gci_tree.c
	$(O2SHO)
	$(SAVE2O)

#
# Rules for sample programs
#
test1.$(OBJ): $(srcdir)/test1.c
	$(CC) -c $(COPT) $(CC2O) $(DYN_COMP) $(srcdir)/test1.c

$(SHLPRE)test1$(MODPST): test1.$(OBJ) $(SHLPRE)$(SHLFILE)$(SHLPST) $(TEST1EXP)
	$(LD_RXLIB_A1) $(TEST1EXPORTS) test1.$(OBJ) $(LD_RXLIB_B1)
	$(RANLIB_DYNAMIC)

test2.$(OBJ): $(srcdir)/test2.c
	$(CC) -c $(COPT) $(CC2O) $(DYN_COMP) $(srcdir)/test2.c

$(SHLPRE)test2$(MODPST): test2.$(OBJ) $(SHLPRE)$(SHLFILE)$(SHLPST) $(TEST2EXP)
	$(LD_RXLIB_A2) $(TEST2EXPORTS) test2.$(OBJ) $(LD_RXLIB_B2)
	$(RANLIB_DYNAMIC)

#
# AIX export targets
#
regina.exp: ./rexx$(EXE) $(srcdir)/regina_w32_dll.def $(srcdir)/def2exp.rexx
	./rexx$(EXE) $(srcdir)/def2exp.rexx $(srcdir)/regina_w32_dll.def regina.exp

test1.exp: ./rexx$(EXE) $(srcdir)/test1_w32_dll.def $(srcdir)/def2exp.rexx
	./rexx$(EXE) $(srcdir)/def2exp.rexx $(srcdir)/test1_w32_dll.def test1.exp

test2.exp: ./rexx$(EXE) $(srcdir)/test2_w32_dll.def $(srcdir)/def2exp.rexx
	./rexx$(EXE) $(srcdir)/def2exp.rexx $(srcdir)/test2_w32_dll.def test2.exp

ARCHIVE_FILES = $(ALLSRC) $(README) $(REG_DIR)/makefile.* \
	$(REG_DIR)/*.rsp $(DEMOFILES) $(TRIPFILES) $(CONTRIBFILES) \
	$(CONFFILES) $(REG_DIR)/*.def $(REG_DIR)/*.ico $(REG_DIR)/*.rc  $(REG_DIR)/*.info \
	$(REG_DIR)/file_id* $(REG_DIR)/*.bat $(REG_DIR)/*.cmd $(YACCLEX_FILES) \
	$(REG_DIR)/*.rexx $(REG_DIR)/yaccsrc.bound $(REG_DIR)/rexx.make \
	$(EPOC32FILES) $(TAR_MTSSRC)

ZIP_ARCHIVE_FILES = $(ZIP_ALLSRC) $(ZIP_README) makefile.* \
	*.rsp $(ZIP_DEMOFILES) $(ZIP_TRIPFILES) $(ZIP_CONTRIBFILES) \
	$(ZIP_CONFFILES) *.def *.ico *.rc *.info \
	file_id* *.bat *.cmd $(ZIP_YACCLEX_FILES) \
	*.rexx yaccsrc.bound rexx.make \
	$(ZIP_EPOC32FILES) $(ZIP_MTSSRC)

dist:
	(cd $(srcdir)/..;tar -cvf - $(ARCHIVE_FILES) | gzip > Regina-REXX-$(VERDOT).tar.gz )

tar:
	(cd $(srcdir)/..; \
	tar -cvf - $(ARCHIVE_FILES) | compress > Regina-REXX-$(VERDOT).tar.Z )

zzip:
	(cd $(srcdir)/..; \
	zip regina$(VER) $(ARCHIVE_FILES) )

zip:
	zip regina$(VER) $(ZIP_ARCHIVE_FILES)

#
# installation rules
#

install: $(BASE_INSTALL) $(OTHER_INSTALLS)

installbase: all
	$(INSTALL) -m 755 -d $(bindir)
	$(INSTALL) -m 755 -d $(libdir)
	$(INSTALL) -m 755 -d $(includedir)
	$(INSTALL) -m 755 -d $(sharedir)
	$(INSTALL) -m 755 -d $(mandir)/man1
	$(INSTALL) -m 755 -c ./rexx$(EXE) $(bindir)/rexx$(EXE)
	$(INSTALL) -m 755 -c ./rxqueue$(EXE) $(bindir)/rxqueue$(EXE)
	$(INSTALL) -m 755 -c ./rxstack$(EXE) $(bindir)/rxstack$(EXE)
	$(INSTALL) -m 755 -c ./regina-config $(bindir)/regina-config
	-$(INSTALL) -m 755 -c ./rxstack.init.d $(sysconfdir)/rc.d/init.d/rxstack
	@echo "The system startup/shutdown script; rxstack, may have been installed into $(sysconfdir)/rc.d/init.d"
	@echo "You need to create the appropriate links to this script to start and stop rxstack automatically."
	-$(INSTALL) -m 755 -c ./$(LIBPRE)$(LIBFILE)$(LIBPST) $(libdir)/$(LIBPRE)$(LIBFILE)$(LIBPST)
	-$(RANLIB) $(libdir)/$(LIBPRE)$(LIBFILE)$(LIBPST)
	$(INSTALL) -m 644 -c $(srcdir)/regina.1 $(mandir)/man1/regina.1
	$(INSTALL) -m 644 -c $(srcdir)/rexxsaa.h $(includedir)/rexxsaa.h
	$(INSTALL) -m 644 -c ./pt.mtb $(sharedir)/pt.mtb
	$(INSTALL) -m 644 -c ./no.mtb $(sharedir)/no.mtb
	$(INSTALL) -m 644 -c ./de.mtb $(sharedir)/de.mtb
	$(INSTALL) -m 644 -c ./es.mtb $(sharedir)/es.mtb
	$(INSTALL) -m 644 -c ./pl.mtb $(sharedir)/pl.mtb
	$(bindir)/rexx $(srcdir)/preinst.rexx $(bindir)/rexx $(srcdir)/demo/rexxcps.rexx  $(sharedir)/rexxcps.rexx
	-chmod 755 $(sharedir)/rexxcps.rexx
	$(bindir)/rexx $(srcdir)/preinst.rexx $(bindir)/rexx $(srcdir)/demo/animal.rexx   $(sharedir)/animal.rexx
	-chmod 755 $(sharedir)/animal.rexx
	$(bindir)/rexx $(srcdir)/preinst.rexx $(bindir)/rexx $(srcdir)/demo/block.rexx    $(sharedir)/block.rexx
	-chmod 755 $(sharedir)/block.rexx
	$(bindir)/rexx $(srcdir)/preinst.rexx $(bindir)/rexx $(srcdir)/demo/dateconv.rexx $(sharedir)/dateconv.rexx
	-chmod 755 $(sharedir)/dateconv.rexx
	$(bindir)/rexx $(srcdir)/preinst.rexx $(bindir)/rexx $(srcdir)/demo/timeconv.rexx $(sharedir)/timeconv.rexx
	-chmod 755 $(sharedir)/timeconv.rexx
	$(bindir)/rexx $(srcdir)/preinst.rexx $(bindir)/rexx $(srcdir)/demo/newstr.rexx   $(sharedir)/newstr.rexx
	-chmod 755 $(sharedir)/newstr.rexx

installregina:
	$(INSTALL) -m 755 -c ./regina$(EXE) $(bindir)/regina$(EXE)
	$(bindir)/rexx $(srcdir)/preinst.rexx $(bindir)/regina $(srcdir)/demo/dynfunc.rexx  $(sharedir)/dynfunc.rexx
	-chmod 755 $(sharedir)/dynfunc.rexx

installlib: installregina
	$(INSTALL) -m 755 -c ./$(SHLPRE)$(SHLFILE)$(SHLPST) $(libdir)/$(SHLPRE)$(SHLFILE)$(SHLPST)
	$(INSTALL) -m 755 -c ./$(SHLPRE)test1$(MODPST) $(libdir)/$(SHLPRE)test1$(MODPST)
	$(INSTALL) -m 755 -c ./$(SHLPRE)test2$(MODPST) $(libdir)/$(SHLPRE)test2$(MODPST)

installabilib: installregina
	-$(INSTALL) -m 755 -c ./$(SHLPRE)$(SHLFILE)$(SHLPST).$(ABI) $(libdir)/$(SHLPRE)$(SHLFILE)$(SHLPST).$(ABI)
	-rm -f $(libdir)/$(SHLPRE)$(SHLFILE)$(SHLPST).$(ABI_MAJOR)
	-(cd $(libdir);$(LN_S) $(SHLPRE)$(SHLFILE)$(SHLPST).$(ABI) $(SHLPRE)$(SHLFILE)$(SHLPST).$(ABI_MAJOR) )
	-rm -f $(libdir)/$(SHLPRE)$(SHLFILE)$(SHLPST)
	-(cd $(libdir);$(LN_S) $(SHLPRE)$(SHLFILE)$(SHLPST).$(ABI) $(SHLPRE)$(SHLFILE)$(SHLPST) )
	$(INSTALL) -m 755 -c ./$(SHLPRE)test1$(MODPST) $(libdir)/$(SHLPRE)test1$(MODPST)
	$(INSTALL) -m 755 -c ./$(SHLPRE)test2$(MODPST) $(libdir)/$(SHLPRE)test2$(MODPST)

installmacosx: ./$(SHLPRE)$(SHLFILE)$(BUNDLE)
	$(INSTALL) -m 755 -c ./$(SHLPRE)$(SHLFILE)$(BUNDLE) $(libdir)/$(SHLPRE)$(SHLFILE)$(BUNDLE)

beosinstall: all
	$(INSTALL) -m 755 -d /boot/home/config/bin
	$(INSTALL) -m 755 -d /boot/home/config/lib
	$(INSTALL) -m 755 -d /boot/home/config/include
	$(INSTALL) -m 755 -d $(sharedir)
	$(INSTALL) -m 755 -d $(mandir)/man1
	$(INSTALL) -m 755 -c ./rexx /boot/home/config/bin/rexx
	$(INSTALL) -m 755 -c ./rxqueue /boot/home/config/bin/rxqueue
	$(INSTALL) -m 755 -c ./rxstack /boot/home/config/bin/rxstack
	$(INSTALL) -m 755 -c ./$(LIBPRE)$(LIBFILE)$(LIBPST) /boot/home/config/lib/$(LIBPRE)$(LIBFILE)$(LIBPST)
#	$(INSTALL) -m 744 -c $(srcdir)/regina.1 $(mandir)/man1/regina.1
	$(INSTALL) -m 644 -c $(srcdir)/rexxsaa.h /boot/home/config/include/rexxsaa.h
	$(INSTALL) -m 755 -c ./regina /boot/home/config/bin/regina
	$(INSTALL) -m 755 -c ./$(SHLPRE)$(SHLFILE)$(SHLPST) /boot/home/config/lib/$(SHLPRE)$(SHLFILE)$(SHLPST)
	$(INSTALL) -m 755 -c ./$(SHLPRE)test1$(MODPST) $(sharedir)/$(SHLPRE)test1$(MODPST)
	$(INSTALL) -m 755 -c ./$(SHLPRE)test2$(MODPST) $(sharedir)/$(SHLPRE)test2$(MODPST)
	$(INSTALL) -m 644 -c ./pt.mtb $(sharedir)/pt.mtb
	$(INSTALL) -m 644 -c ./no.mtb $(sharedir)/no.mtb
	$(INSTALL) -m 644 -c ./de.mtb $(sharedir)/de.mtb
	$(INSTALL) -m 644 -c ./es.mtb $(sharedir)/es.mtb
	$(INSTALL) -m 644 -c ./pl.mtb $(sharedir)/pl.mtb
	/boot/home/config/bin/rexx $(srcdir)/preinst.rexx /boot/home/config/bin/rexx $(srcdir)/demo/rexxcps.rexx   /boot/home/config/bin/rexxcps.rexx
	-chmod 755 /boot/home/config/bin/rexxcps.rexx
	/boot/home/config/bin/rexx $(srcdir)/preinst.rexx /boot/home/config/bin/rexx $(srcdir)/demo/animal.rexx    /boot/home/config/bin/animal.rexx
	-chmod 755 /boot/home/config/bin/animal.rexx
	/boot/home/config/bin/rexx $(srcdir)/preinst.rexx /boot/home/config/bin/rexx $(srcdir)/demo/block.rexx     /boot/home/config/bin/block.rexx
	-chmod 755 /boot/home/config/bin/block.rexx
	/boot/home/config/bin/rexx $(srcdir)/preinst.rexx /boot/home/config/bin/rexx $(srcdir)/demo/dateconv.rexx  /boot/home/config/bin/dateconv.rexx
	-chmod 755 /boot/home/config/bin/dateconv.rexx
	/boot/home/config/bin/rexx $(srcdir)/preinst.rexx /boot/home/config/bin/rexx $(srcdir)/demo/timeconv.rexx  /boot/home/config/bin/timeconv.rexx
	-chmod 755 /boot/home/config/bin/timeconv.rexx
	/boot/home/config/bin/rexx $(srcdir)/preinst.rexx /boot/home/config/bin/regina $(srcdir)/demo/dynfunc.rexx /boot/home/config/bin/dynfunc.rexx
	-chmod 755 /boot/home/config/bin/dynfunc.rexx
	/boot/home/config/bin/rexx $(srcdir)/preinst.rexx /boot/home/config/bin/rexx $(srcdir)/demo/newstr.rexx    /boot/home/config/bin/newstr.rexx
	-chmod 755 /boot/home/config/bin/newstr.rexx

cygwininstall: all
	$(INSTALL) -m 755 -d $(bindir)
	$(INSTALL) -m 755 -d $(libdir)
	$(INSTALL) -m 755 -d $(includedir)
	$(INSTALL) -m 755 -d $(sharedir)
	$(INSTALL) -m 755 -d $(mandir)/man1
	$(INSTALL) -m 755 -c ./rexx$(EXE) $(bindir)/rexx$(EXE)
	$(INSTALL) -m 755 -c ./regina$(EXE) $(bindir)/regina$(EXE)
	$(INSTALL) -m 755 -c ./rxqueue$(EXE) $(bindir)/rxqueue$(EXE)
	$(INSTALL) -m 755 -c ./rxstack$(EXE) $(bindir)/rxstack$(EXE)
	$(INSTALL) -m 755 -c ./regina-config $(bindir)/regina-config
	$(INSTALL) -m 755 -c ./$(SHLPRE)$(SHLFILE)$(SHLPST) $(bindir)/$(SHLPRE)$(SHLFILE)$(SHLPST)
	$(INSTALL) -m 755 -c ./$(SHLPRE)test1$(MODPST) $(bindir)/$(SHLPRE)test1$(MODPST)
	$(INSTALL) -m 755 -c ./$(SHLPRE)test2$(MODPST) $(bindir)/$(SHLPRE)test2$(MODPST)
	$(INSTALL) -m 755 -c ./$(LIBPRE)$(SHLFILE)$(LIBPST) $(libdir)/$(LIBPRE)$(SHLFILE)$(LIBPST)
	$(INSTALL) -m 755 -c ./$(LIBPRE)$(LIBFILE)$(LIBPST) $(libdir)/$(LIBPRE)$(LIBFILE)$(LIBPST)
	$(INSTALL) -m 644 -c $(srcdir)/regina.1 $(mandir)/man1/regina.1
	$(INSTALL) -m 644 -c $(srcdir)/rexxsaa.h $(includedir)/rexxsaa.h
	$(INSTALL) -m 644 -c ./pt.mtb $(sharedir)/pt.mtb
	$(INSTALL) -m 644 -c ./no.mtb $(sharedir)/no.mtb
	$(INSTALL) -m 644 -c ./de.mtb $(sharedir)/de.mtb
	$(INSTALL) -m 644 -c ./es.mtb $(sharedir)/es.mtb
	$(INSTALL) -m 644 -c ./pl.mtb $(sharedir)/pl.mtb
	$(bindir)/rexx $(srcdir)/preinst.rexx $(bindir)/rexx $(srcdir)/demo/rexxcps.rexx  $(sharedir)/rexxcps.rexx
	-chmod 755 $(sharedir)/rexxcps.rexx
	$(bindir)/rexx $(srcdir)/preinst.rexx $(bindir)/rexx $(srcdir)/demo/animal.rexx   $(sharedir)/animal.rexx
	-chmod 755 $(sharedir)/animal.rexx
	$(bindir)/rexx $(srcdir)/preinst.rexx $(bindir)/rexx $(srcdir)/demo/block.rexx    $(sharedir)/block.rexx
	-chmod 755 $(sharedir)/block.rexx
	$(bindir)/rexx $(srcdir)/preinst.rexx $(bindir)/rexx $(srcdir)/demo/dateconv.rexx $(sharedir)/dateconv.rexx
	-chmod 755 $(sharedir)/dateconv.rexx
	$(bindir)/rexx $(srcdir)/preinst.rexx $(bindir)/rexx $(srcdir)/demo/timeconv.rexx $(sharedir)/timeconv.rexx
	-chmod 755 $(sharedir)/timeconv.rexx
	$(bindir)/rexx $(srcdir)/preinst.rexx $(bindir)/rexx $(srcdir)/demo/newstr.rexx   $(sharedir)/newstr.rexx
	-chmod 755 $(sharedir)/newstr.rexx
	$(bindir)/rexx $(srcdir)/preinst.rexx $(bindir)/rexx $(srcdir)/demo/dynfunc.rexx  $(sharedir)/dynfunc.rexx
	-chmod 755 $(sharedir)/dynfunc.rexx

clean:
	rm -f $(JUNK)

realclean: clean
	rm -f regina-config rxstack.init.d

binary: $(BASE_BINARY)

binarybase: all
	-rm -fr ./tmpdir
	-mkdir -p ./tmpdir/bin
	-mkdir -p ./tmpdir/lib
	-mkdir -p ./tmpdir/include
	-mkdir -p ./tmpdir/man/man1
	-mkdir -p ./tmpdir/doc/regina
	-mkdir -p ./tmpdir/share/regina
	-mkdir -p ./tmpdir/rexx
	./rexx$(EXE) $(srcdir)/makebinary.rexx -s$(srcdir) -d./tmpdir -u$(USE_ABI) -a$(ABI_MINOR) -A$(ABI_MAJOR) -p$(SHLPRE) -e$(EXE) -S$(SHLPST) -l$(LIBPRE) -L$(LIBPST) -b$(SHLFILE) -B$(LIBFILE)
	(cd ./tmpdir; \
	tar cvf - * | gzip > ../Regina-REXX-$(VERDOT)-$(target).tgz )

cygwinbinary: all
	-rm -fr ./tmpdir
	-mkdir -p ./tmpdir/usr/bin
	-mkdir -p ./tmpdir/usr/lib
	-mkdir -p ./tmpdir/usr/include
	-mkdir -p ./tmpdir/usr/man/man1
	-mkdir -p ./tmpdir/usr/doc/regina
	-mkdir -p ./tmpdir/usr/share/regina
	./rexx$(EXE) $(srcdir)/makebinary.rexx -s$(srcdir) -d./tmpdir/usr -u$(USE_ABI) -a$(ABI_MINOR) -A$(ABI_MAJOR) -p$(SHLPRE) -e$(EXE) -S$(SHLPST) -l$(LIBPRE) -L$(LIBPST) -b$(SHLFILE) -B$(LIBFILE)
	(cd ./tmpdir; \
	tar cvf - usr | gzip > ../Regina-REXX-$(VERDOT)-$(target).tgz )

beosbinary: all
	-rm -fr ./tmpdir
	-mkdir -p ./tmpdir/bin
	-mkdir -p ./tmpdir/lib
	-mkdir -p ./tmpdir/include
	-mkdir -p ./tmpdir/add-ons/regina
	-mkdir -p ./tmpdir/doc/regina
	./rexx$(EXE) $(srcdir)/makebinary.rexx -s$(srcdir) -d./tmpdir -u$(USE_ABI) -a$(ABI_MINOR) -A$(ABI_MAJOR) -p$(SHLPRE) -e$(EXE) -S$(SHLPST) -l$(LIBPRE) -L$(LIBPST) -b$(SHLFILE) -B$(LIBFILE)
	(cd ./tmpdir; \
	zip -r Regina-REXX-$(VERDOT)-$(target).zip * )

atheosbinary: all
	-rm -fr ./tmpdir
	-mkdir -p ./tmpdir/regina/bin
	-mkdir -p ./tmpdir/regina/lib
	-mkdir -p ./tmpdir/regina/include
	-mkdir -p ./tmpdir/regina/man/man1
	-mkdir -p ./tmpdir/regina/doc/regina
	-mkdir -p ./tmpdir/regina/share/regina
	-mkdir -p ./tmpdir/regina/rexx
	./rexx$(EXE) $(srcdir)/makebinary.rexx -s$(srcdir) -d./tmpdir/regina -u$(USE_ABI) -a$(ABI_MINOR) -A$(ABI_MAJOR) -p$(SHLPRE) -e$(EXE) -S$(SHLPST) -l$(LIBPRE) -L$(LIBPST) -b$(SHLFILE) -B$(LIBFILE)
	(cd ./tmpdir; \
	tar cvf - regina | gzip > ../Regina-REXX-$(VERDOT)-$(target).tgz )

rpm: dist
	cp $(srcdir)/../Regina-REXX-$(VERDOT).tar.gz /usr/src/redhat/SOURCES
	rpm -ba $(srcdir)/Regina-$(VERDOT).spec
#
# End of makefile
#
